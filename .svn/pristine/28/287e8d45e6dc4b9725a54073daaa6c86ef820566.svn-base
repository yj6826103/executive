<template>
  <div class="approve"><!--已批准-->
      <div class="yuding-cen">
            <table class="table">
                <tr>
                    <th>订单编号</th>
                    <th>飞机注册号</th>
                    <th>飞机型号</th>
                    <th>预订日期</th>
                    <th>出发地</th>
                    <th>计划进港日期</th>
                    <th>停靠机场</th>
                    <th>计划出港日期</th>
                    <th>目的地</th>
                    <th>停靠时间</th>
                    <th>延期次数</th>
                    <th>操作</th>
                </tr>
                <tr v-for="(item,index) in datas" :class="[index%2!=0?'':back,item.orderWarn>0?NumberWarning:'']" >
                    <td @click="jump(item)">
                        <el-tooltip class="item" effect="light" placement="top">
                            <div slot="content" v-text="item.orderNo"></div>
                            <i class="el-icon-tickets"></i>
                        </el-tooltip>
                    </td>
                    <td>{{item.orderRegCode}}</td>
                    <td>{{item.orderActypeCode}}</td>
                    <td>{{item.date1}}</td>
                    <td>{{item.orderDArptCode}}</td>
                    <td>{{item.sta}}</td>
                    <td>{{item.orderArptName}}</td>
                    <td>{{item.std}}</td>
                    <td>{{item.orderAArptCode}}</td>
                    <td style="text-align:center">{{item.orderStay}}</td>                    
                    <td style="text-align:center">{{item.orderPostponeNum}}</td>
                    <td>
                        <button v-if="item.orderFlgtStatus !=1 " class="button warning" @click="modOrder(item)">{{$t('Recent.Delay')}}</button>
                        <button v-else class="button">{{$t('Recent.Delay')}}</button>
                    </td>
                </tr>
            </table>
            <div class="showDataClass" v-show="showData"><i class="el-icon-warning"></i> {{$t('NoData')}}</div> 
             <el-pagination 
                v-if="judNum" 
                @current-change="currentPage"
                :page-size="pagesize" 
                background 
                layout="prev, pager, next,jumper" 
                :total="totalNumber">
            </el-pagination>
        </div>
        <el-dialog title="订单详情" 
            :visible.sync="showDialog" 
            :modal-append-to-body="false" 
            :append-to-body="true"
            top='10vh'
            width="80%">
            <order-detail v-if="showDialog"></order-detail>
        </el-dialog>
  </div>
</template>
<script>
import qs from "qs";
import orderDetail from "./orderDetail"
export default {
    components: {
        orderDetail
    },
    data () {
        return {
           datas:[],
           showData:true,
           totalNumber:0,//总条数
           pagesize:10,//每页的数据条数
           currentPages:1,//默认开始页面
           judNum:false,//判断分页
           back:'back',
           showDialog:false,
        //    modOrdered:true,
           NumberWarning:'NumberWarning',
        }
    },
    mounted () {
        this. getdatas()
    },
    methods: {
        setDatas(item){
            // item.orderSta.substring(0,16)
            // item.orderStd.substring(0,16)
            this.$store.commit("get_ChooseOrder",item);
            if(item.orderFlgtStatus=="2"){
                this.$store.commit("set_bled",true)
            }
            for (let i = 0; i < item.basDocs.length; i++) {
                if (item.basDocs[i].docType == "飞行计划申请单") {
                    this.$store.commit("get_FlightPlanList",item.basDocs[i]);
                    this.$store.commit("set_FlightPlanListName",item.basDocs[i].docName);
                    this.$store.commit("set_FlightPlanListNewName",item.basDocs[i].attName);
                    this.$store.commit("set_FlightPlanListAddress",item.basDocs[i].docAddress)
                }
                if (item.basDocs[i].docType == "航班时刻批复") {
                    this.$store.commit("get_TimeReply", item.basDocs[i]);
                    this.$store.commit("set_TimeReplyName",item.basDocs[i].docName);
                    this.$store.commit("set_TimeReplyNewName",item.basDocs[i].attName);
                    this.$store.commit("set_TimeReplyAddress",item.basDocs[i].docAddress)
                }
                if (item.basDocs[i].docType == "机库申请确认函") {
                    this.$store.commit("get_ConfirmationLetter",item.basDocs[i]);
                    this.$store.commit("set_ConfirmationLetterName",item.basDocs[i].docName);
                    this.$store.commit("set_ConfirmationLetterNewName",item.basDocs[i].attName);
                    this.$store.commit("set_ConfirmationLetterAddress",item.basDocs[i].docAddress)
                }
            }
            if (item.orderIsappliedHangar == "2") {
                this.$store.commit("set_isApplyFor", '1');
                this.$store.commit("set_disabledReason", false);
            } else {
                this.$store.commit("set_isApplyFor", '2');
                this.$store.commit("set_disabledReason", true);
            }
            //console.log(item.orderIsappliedHangar)
            this.$store.commit("set_orderRegCode",item.orderRegCode)//注册号
            this.$store.commit("set_orderActypeCode",item.orderActypeCode)//机型
            this.$store.commit("set_orderArptCode",item.orderArptCode)//机场
            this.$store.commit("set_orderHangar",item.orderHangar)
            this.$store.commit("set_orderIsappliedHangar",item.orderIsappliedHangar)
            this.$store.commit("set_disabledFalse",false)
            this.$store.commit("set_orderSta",item.orderSta)
            this.$store.commit("set_orderStd",item.orderStd)
            this.$store.commit("set_newdates",item.orderStd)//延迟 计划出港日期
            this.$store.commit("get_orderOerdertype", item.orderOerdertype);
            this.$store.commit("get_orderStay", item.orderStay);
        },
        modOrder(item){            
            this.setDatas(item)
            this.$router.push({ path: "/menu/deferred" });                       
        },
        currentPage(currentPage){
             this.currentPages=currentPage
            this.getdatas()
        },
        jump(item){
            this.$store.commit('get_details',item)
            // this.$router.push({ path: "/menu/details" });
            this.showDialog=true
        },
        getdatas(){
             var param=qs.stringify({
                orderStatus:'3'
            })
            this.$http({
                method: "post",
                url: "/bizOrder/selectOrderApprove",    
                data:param,            
                headers: {
                    'Authorization':localStorage.getItem("token"),
                    'page':this.currentPages,
                    'limit':this.pagesize
                    }
            })
            .then(response => {
                // console.log(response.data.data)
                if(response.data.status==100){
                    this.showData=false
                    this.totalNumber=parseInt(response.data.data.total)
                    this.datas=response.data.data.list
                    for(let i of this.datas){
                        i.orderSta=i.orderSta?i.orderSta.substring(0,16):''
                        i.orderStd=i.orderStd?i.orderStd.substring(0,16):''
                    }                    
                     if(parseInt(response.data.data.total)>10){
                       this.judNum=true
                    }else{
                        this.judNum=false
                    }
                   
                }     
            })
            .catch(error => {
                console.log(error);
            });
        },
    }

}
</script>
