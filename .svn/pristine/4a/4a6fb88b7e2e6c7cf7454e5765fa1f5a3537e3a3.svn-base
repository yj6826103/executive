<template>
  <div class="charters">
        <div class="tit">
            <div class="t" @click="toggle_two">
                <i :class="Level2==false?i1:i1_"></i>
                <i :class="Level2==false?i2:i2_"></i>
                <span>特许经营</span>
            </div>
            <el-dropdown trigger="click" :showTimeout="0"  placement="bottom-start">
                <span class="el-dropdown-link">
                    <i class="i3"></i>
                </span>
                <el-dropdown-menu slot="dropdown">
                    <el-dropdown-item>
                        <i class="el-icon-circle-plus i_icon"></i>
                        <a @click="Add_Hangar(0)">增加机坪</a>
                    </el-dropdown-item>
                </el-dropdown-menu>
            </el-dropdown>
        </div>
        <transition name="custom-classes-transition" enter-active-class="animated fadeIn">
            <ul class="cen" v-show="Level2">           
                <li v-for="(item,index) in AddHangars">
                    <div class="tit">
                        <div class="t" @click="toggle_th(item,index)">
                            <i :class="Level3==index?i1_:i1"></i> <i :class="Level3==index?i2_:i2"></i>
                            <span>{{item.stndObjectName}}</span>
                        </div>
                        <el-dropdown trigger="click" :show-timeout='0'  placement="bottom-start">
                            <span class="el-dropdown-link">
                                <i class="i3"></i>
                            </span>
                            <el-dropdown-menu slot="dropdown">
                                <el-dropdown-item><i class="el-icon-circle-plus-outline i_icon"></i><a @click="add_reservation(item.stndObjectName,item.stndObjectId,item,index,0)">添加机位</a></el-dropdown-item>
                                <el-dropdown-item><i class="el-icon-delete i_icon"></i><a @click="del_Hangar(item.stndObjectId,index)">删除机坪</a></el-dropdown-item>                                
                            </el-dropdown-menu>
                        </el-dropdown>                            
                    </div>
                    <transition name="custom-classes-transition" enter-active-class="animated fadeIn">
                        <ul class="cend" v-if="Level3==index">
                            <li v-for="(items,indexs) in item.stndList">
                                <div class="tit">
                                    <div class="t" @click="mod_reservation(item.stndObjectName,item.stndObjectId,items,indexs,0)">                                               
                                        <i :class="Level4==indexs?i2_:i2"></i>
                                        <span :class="Level4==indexs?colorBlue:''">{{items.stndCode}}</span>
                                    </div>
                                    <el-dropdown trigger="click" :show-timeout='0'  placement="bottom-start">
                                        <span class="el-dropdown-link">
                                            <i class="i3"></i>
                                        </span>
                                        <el-dropdown-menu slot="dropdown">
                                            <el-dropdown-item><i class="el-icon-document i_icon"></i><a @click="cop_reservation(items.stndId,items)">复制机位</a></el-dropdown-item>
                                            <el-dropdown-item><i class="el-icon-delete i_icon"></i><a @click="del_reservation(items.stndId,indexs)">删除机位</a></el-dropdown-item>
                                        </el-dropdown-menu>
                                    </el-dropdown>
                                </div>
                            </li>                                   
                        </ul>
                    </transition>
                </li>                                          
            </ul>
         </transition>
  </div>
</template>

<script>
import { mapGetters, mapMutations } from "vuex";
import qs from 'qs'
export default {
  data() {
    return {
        Level2:false,
        Level3:-1,
        Level4:-1,
        i1:"i1",
        i1_:"i1_",
        i2:"i2",
        i2_:"i2_",
        colorBlue:'colorBlue',
        rightHide:false,
    };
  },
  computed: {
    ...mapGetters([
        "seatAddHangar",//机坪切换
        "seatAddreservation",//添加机位
        "modHangar",//修改机坪
        "ModReservation",//修改机位
        "AddHangars",//机坪列表
        "AddHangarsInfo",//机坪信息
        "Addreservations",//机位列表
    ])
  },
  mounted () {
      this.$store.dispatch('initHangars')
  },
  methods: {
    ...mapMutations([
    "clickseatAddHangar",//机坪切换
    "set_AddReservation",//机位切换
    "clickmodHangar",//机坪切换
    "set_ModReservation",
    ]),
    Add_Hangar(stndPObjectIds) {//增加机坪
        this.$store.commit('set_stndPObjectIds',stndPObjectIds)
        this.clickseatAddHangar();
        return
    },
    mod_Hangar(item,valNum){//修改机坪
        this.$store.commit('set_stndPObjectIds',valNum)
        this.$store.commit('set_AddHangarsInfo',item)
        this.clickmodHangar()
        return
    },   
    del_Hangars(stndId,index){//删除机坪/ stnd/ doDeleteApron
        let param=qs.stringify({
            stndObjectId:stndId
        })
        this.$http({
            url: "/stnd/doDeleteApron",
            method: "post",
            data:param,
            headers: {'Authorization':localStorage.getItem("token")}

        }).then(response=>{
            if(response.status==200){
                if(response.data.status==100){
                    this.AddHangars.splice(index, 1) 
                    this.$store.commit('elSet_AddReservation',false) 
                    this.$store.commit('elSet_ModReservation',false)  
                    this.$message({
                        showClose: true,
                        message: '删除成功',
                        type: 'success'
                    });
                    return
                }
            }else{
                this.$message.error('删除失败');
                return false
                      
            }           
        }).catch(error => {
            console.log(error);
        });    
     
    },
    del_Hangar(stndId,index){//删除机坪
        this.$confirm('是否删除?','提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
        //   type: 'warning'
        }).then(() => {
          this.del_Hangars(stndId,index)
        }).catch(() => {
          console.log('删除失败')
        });  
    },  
    add_reservation(itemName,itemID,item,index,valNum){//增加机位
        this.$store.commit('elSet_ModReservation',false)
        // this.$store.commit('set_stndPObjectIds',valNum)
        this.$store.commit('get_AddHangarsName',itemName)
        this.$store.commit('set_AddHangarsId',itemID)
        setTimeout(()=>{
            this.$store.commit('elSet_AddReservation',true)
        },100)    
    },   
    mod_reservation(itemName,itemID,item,index,valNum){//修改机位
        this.$store.commit('elSet_AddReservation',false)
        this.Level4=index
        this.$store.dispatch('changeStndPostflgtJobs')
        // this.$store.commit('set_stndPObjectIds',valNum)//0
        this.$store.commit('set_reservation',item)//机位信息
        this.$store.commit('get_AddHangarsName',itemName)//机坪名称
        this.$store.commit('set_AddHangarsId',itemID)//机坪ID
    },
    cop_reservations(id,item){//复制机位
        let param=qs.stringify({
            stndId:id
        })
        this.$http({
            url: "/stnd/getStndByID",
            method: "post",
            data:param,
            headers: {'Authorization':localStorage.getItem("token")}
        }).then(response=>{
            if(response.status==200){
                if(response.data.status==100){
                    this.$store.commit('add_Addreservations',item)  
                    this.$store.commit('elSet_AddReservation',false) 
                    this.$store.commit('elSet_ModReservation',false) 
                    return
                }
            }else{                
               this.$message.error('复制失败');
               return false
            }           
        }).catch(error => {
            console.log(error);
        });         
    },
    cop_reservation(id,item){//复制机位
        this.$confirm('是否复制该机位?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
        //   type: 'warning'
        }).then(() => {
          this.cop_reservations(id,item)  
          this.$store.dispatch('initHangars')
        }).catch(() => {
          console.log('复制除失败')
        }); 
    },
    del_reservations(stndId,index){//删除机位 
        let param=qs.stringify({
            stndId:stndId
        })
        this.$http({
            url: "/stnd/doDeleteStnd",
            method: "post",
            data:param,
            headers: {'Authorization':localStorage.getItem("token")}

        }).then(response=>{
            if(response.status==200){
                if(response.data.status==100){
                    this.Addreservations.splice(index, 1)  
                    this.$store.commit('elSet_AddReservation',false) 
                    this.$store.commit('elSet_ModReservation',false)   
                    this.$message({
                        showClose: true,
                        message: '删除机位成功',
                        type: 'success'
                    }); 
                    return
                }
            }else{                
                this.$message.error('删除失败');
                return false   
            }           
        }).catch(error => {
            console.log(error);
        });         
    },
    del_reservation(stndId,index){//删除机位
        this.$confirm('是否删除?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
        //   type: 'warning'
        }).then(() => {
          this.del_reservations(stndId,index)
          this.$store.dispatch('initHangars')
        }).catch(() => {
          console.log('删除失败')
        }); 
    },        
    toggle_two(){//下拉   
        this.Level2=!this.Level2
        this.$store.commit('elSet_AddReservation',false) 
        this.$store.commit('elSet_ModReservation',false) 
        this.Level4=-1
    },
    toggle_th(item,index){//下拉      
        if(this.Level3==index){
            this.Level3=-1
        }else{
            this.Level3=index
        }
        this.Level4=-1
        this.$store.commit("set_AddHangarsInfo",item)
        this.$store.commit("set_Addreservations",item.stndList)
        this.$store.commit('elSet_AddReservation',false) 
        this.$store.commit('elSet_ModReservation',false) 
    },
    
  }
};
</script>

