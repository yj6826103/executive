<template><!--创建订单-->	
	<div class="create">	
    <div class="createOrderBox">
		  <Applicant></Applicant>
			<div class="box">
				<div class="lbox">
					<div class="ybq">
						<span>申请内容</span>
					</div>
				</div>
				<div class="rbox">
					<ul class="info-box1">
						<li>
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>飞机注册号</div>
								<div class="cen">
									<el-select v-validate data-vv-rules="required" data-vv-as="飞机注册号" name="orderRegCode" :value="orderRegCode" @change="changeAircraft" filterable  clearable placeholder="请选择">
                    <el-option
                    v-for="item in planNum"
                    :key="item.actRegCode"
                    :label="item.actRegCode"
                    :value="item.actRegCode">
                    </el-option> 
                  </el-select>
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderRegCode')" class="help is-danger">{{ errors.first('orderRegCode') }}</span></div>
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>飞机型号</div>
								<div class="cen">
									<el-select v-validate data-vv-rules="required" data-vv-as="飞机型号" name="orderActypeCode" :value="orderActypeCode"  @change="changeArptTypeCode" clearable placeholder="请选择">
                    <el-option
                    v-for="item in Aircraft"
                    :key="item.actActypeCode"
                    :label="item.actActypeCode"
                    :value="item.actActypeCode">
                    </el-option>
                  </el-select>
                  
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderActypeCode')" class="help is-danger">{{ errors.first('orderActypeCode') }}</span></div>
						</li>
						<li>
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>航班号</div>
								<div class="cen">
									<label>
                      <span>进港</span>
                       <input v-model="ChooseOrder.orderNo" v-show="false">
                      <input type="text" v-validate data-vv-rules="required" data-vv-as="进港航班号" name="orderAFlgtNo" v-model="ChooseOrder.orderAFlgtNo" @blur="additional" placeholder="请输入">
                  </label>
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderAFlgtNo')" class="help is-danger">{{ errors.first('orderAFlgtNo') }}</span></div>          
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>航班号</div>
								<div class="cen">
									<label>
                      <span>出港</span>
                      <input type="text" v-validate data-vv-rules="required" data-vv-as="出港航班号" name="orderDFlgtNo" v-model="ChooseOrder.orderDFlgtNo" placeholder="请输入">
                  </label>
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderDFlgtNo')" class="help is-danger">{{ errors.first('orderDFlgtNo') }}</span></div>
						</li>
						<li>
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>出发地</div>
								<div class="cen">
                  <el-autocomplete  v-validate data-vv-rules="required" name="orderDArptCode"
                    class="inline-input"
                    v-model="ChooseOrder.orderDArptCode"
                    :fetch-suggestions="querySearch"
                    placeholder="请输入出发地"
                  ></el-autocomplete>
                </div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderDArptCode')" class="help is-danger">{{ errors.first('orderDArptCode') }}</span></div>
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>目的地</div>
								<div class="cen">
                  <el-autocomplete v-validate data-vv-rules="required" name="orderAArptCode"
                    class="inline-input"
                    v-model="ChooseOrder.orderAArptCode"
                    :fetch-suggestions="querySearch"
                    placeholder="请输入目的地"
                  ></el-autocomplete>
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderAArptCode')" class="help is-danger">{{ errors.first('orderAArptCode') }}</span></div>
						</li>
						<li>
							<CalculateDate :massage="judge"></CalculateDate>
						</li>
						<li>
							<div class="rbbq">
								<div class="tit gray"><i class="el-icon-caret-right gray"></i>航线类型</div>
								<div class="cen">
									<el-select v-model="ChooseOrder.orderADOrI" clearable placeholder="请选择">
									    <el-option
									      v-for="item in orderADOrIs"
									      :key="item.value"
									      :label="item.label"
									      :value="item.value">
									    </el-option>
									</el-select>
								</div>
							</div>
              <div class="validateStyle"></div>
							<div class="rbbq">
                <div class="tit gray"><i class="el-icon-caret-right gray"></i>航线类型</div>
								<div class="cen">
									<el-select v-model="ChooseOrder.orderDDOrI" clearable placeholder="请选择">
									    <el-option
									      v-for="item in orderDDOrIs"
									      :key="item.value"
									      :label="item.label"
									      :value="item.value">
									    </el-option>
									</el-select>
								</div>
							</div>
              <div class="validateStyle"></div>
						</li>
						<li>
							<div class="rbbq">
								<div class="tit gray" ><i class="el-icon-caret-right gray"></i>停场时间</div>
								<div class="cen">
									<input type="text" v-model="orderStay" readonly="readonly" placeholder="————">
								</div>
							</div>
						</li>
					</ul>
					<div class="info-box2">
						<div class="tab-cell">
							<div class="rbbq padBottom" :class="files_s==true?errClass:''">
								<div class="tit"><i class="el-icon-caret-right"></i>附件上传</div>
								<UpFile></UpFile>              
							</div>
              <div class="validateStyle"></div>
						</div>
						<div class="tab-cell right">
							<div class="rbbq">
								<div class="tit"><i class="el-icon-caret-right"></i>机场</div>			    
								<div class="cen">
									<el-select v-validate data-vv-rules="required" data-vv-as="机场" name="orderArptCode" :value="orderArptCode" @change="changeArptCode" clearable placeholder="请选择">
									    <el-option
									      v-for="item in orderArptCodes"  
									      :key="item.dicCode"
									      :label="item.dicCh"
									      :value="item.dicCode"
                        :disabled="item.disabled">
									    </el-option>
									</el-select>
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderArptCode')" class="help is-danger">{{ errors.first('orderArptCode') }}</span></div>
							<div class="rbbq FLGTTYPE">
								<div class="tit"><i class="el-icon-caret-right"></i>进港任务性质</div>
                  <el-cascader :disabled='true' :options="FLGTTYPE_CODE" :props="orderFlgttypeCode" v-model="orderFlgttypeCodes" @change="FLGTTYPE_CODE_Change" separator=">"></el-cascader>
              </div>
              <div class="validateStyle"><span v-show="orderFlgttypeCodes_s">请选择任务性质</span></div>
							<div class="rbbq disabled">
								<div class="tit"><i class="el-icon-caret-right"></i>订单类别</div>
								<div class="cenMission">
                  <div class="ddlb">
									    <el-radio-group v-model="orderOerdertype">
									      <el-radio-button label="1">正常预订</el-radio-button>
									      <el-radio-button label="2">短时间过站</el-radio-button>	
									    </el-radio-group>
									</div>    
								</div>
							</div>
              <div class="validateStyle"></div>
						</div>
					</div>
					<div class="info-box3">
						<div class="tab-cell">
							<div class="rbbq">
								<div class="tit gray"><i class="el-icon-caret-right gray"></i>是否申请机库</div>
								<div class="sfsq">
									<el-radio-group @change="judgeDisableds" v-model="orderIsappliedHangar">
									    <el-radio-button label="1">是</el-radio-button>
									    <el-radio-button label="2">否</el-radio-button>	
									</el-radio-group>
								</div>							    																	
							</div>
						</div>
						<div class="tab-cell">
							<div class="rbbq">
								<div class="tit gray"><i class="el-icon-caret-right gray"></i>机库类型</div>
								<div class="cen">
									<el-select :value="orderHangar" @change="changeorderHangar" :disabled="disableds" clearable placeholder="请选择">
									    <el-option
									      v-for="item in HGR_CODE"
									      :key="item.dicCode"
									      :label="item.dicCh"
									      :value="item.dicCode">
									    </el-option>
									</el-select>
								</div>
							</div>
						</div>
						<div class="tab-cell">							
              <button class="letter" type="text" @click="SeatQuery">机位余量查询</button>
						</div>
            <div class="tab-cell"></div>
					</div>
          <div class="validateStyle"></div>
					<div class="info-box4">
						<div class="tab-cell">
							<div class="rbbq">
								<div class="tit gray"><i class="el-icon-caret-right gray"></i>备注（少于 1000 字）</div>
								<div class="cen">
									<textarea class="beizhu inputText" v-validate data-vv-rules="Length" data-vv-as="备注" name="orderRemark" v-model="ChooseOrder.orderRemark" placeholder=">| 请输入需要备注的内容"></textarea>
								</div>
							</div>
              <div class="validateStyle"><span v-show="errors.has('orderRemark')" class="help is-danger">{{ errors.first('orderRemark') }}</span></div>
						</div>
						<div class="tab-cell">
							<div class="tipbox">
  <textarea class="zhuyi" readonly rows="4">注意事项
  | 橙色标题为必填项;
  | “短时间过站”指停场时间在9点至20点之间，且时常≤6小时;
  | “正常预订”指停场时间>6小时;
  | “计划进港/出港时间”以当地时间为准（UTC+8）;
  | 任务性质是"飞机维修"时，需要在飞行航线中录入北京-天津、天津-北京，并在备注中详细说明维修内容，维修所需时间。</textarea>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="btnsbox">
				<button @click="saveSubmit(1)">保存</button>
				<button @click="saveSubmit(2)" class="sub">提交</button>
			</div>
		</div>
     <transition name="custom-classes-transition" enter-active-class="animated pulse" leave-active-class="animated fadeOut">
        <div class="popbox" id='popbox' v-if="seatQuery">
            <AllowanceQuery :residual="allowance"></AllowanceQuery>
        </div>
     </transition>
     <!-- <transition name="custom-classes-transition" enter-active-class="animated pulse" leave-active-class="animated zoomOutDown"> -->
        <div class="popbox" v-if="ArderSelectionF">
            <ArderSelection :message="message" @additional="additional"></ArderSelection>
        </div>
     <!-- </transition> -->
	</div>
</template>
<script>
import { mapGetters, mapMutations } from "vuex";
import qs from "qs";
import Applicant from "../other/Applicant";
import AllowanceQuery from "../other/AllowanceQuery";
import ArderSelection from "../other/orderSelection";
import UpFile from "../other/UpFile";
import CalculateDate from "../other/CalculateDate";
import singleFileUpload from "../other/SingleFileUpload";
export default {
  components: {
    UpFile,
    Applicant,
    AllowanceQuery,
    CalculateDate,
    singleFileUpload,
    ArderSelection
  },

  data() {
    return {
      ArderSelectionF:false,
      judge:'create',
      errClass:'errClass',    
      files_s:false,
      orderFlgttypeCodes_s:false,
      orderFlgttypeCodes: [],
      orderFlgttypeCode: { //任务性质
        label: "dicCh",
        value: "dicCode",
        children: "child"
      },
      orderIsappliedHangar: "2", //是否已申请机库
      disableds: true,
      //-------------------------------------------------------------------------------
      allowance: {//余量查询传参        
      },
      message:{},
      // orderRegCode:[]
    };
  },
  computed: {
    ...mapGetters([
      "orderHangar",//机库类型
      "orderIsappliedHangars",
      "orderRegCode",
      "orderActypeCode",
      "ChooseOrder",
      "Aircraft", //飞机机型
      "orderADOrIs", //进航线类型
      "orderDDOrIs", //出航线类型
      "PlaceData", //目的地
      "FLGTTYPE_CODE", //任务性质
      "orderArptCodes", //机场列表
      "orderArptCode",//机场
      "seatQuery",
      "planNum",
      "orderStay",
      "orderOerdertype",
      "orderSta",
      "orderStd",
      "FlightPlanList", //飞行计划清单
      "FlightPlanListName", //飞行计划清单
      "FlightPlanListNewName", //飞行计划清单
      "FlightPlanListAddress", //飞行计划清单
      "TimeReply", //"航班时刻批复"
      "TimeReplyName", //"航班时刻批复"
      "TimeReplyNewName", //"航班时刻批复"
      "TimeReplyAddress", //"航班时刻批复"
      "ConfirmationLetter", //"机库申请确认函"
      "ConfirmationLetterName", //"机库申请确认函"
      "ConfirmationLetterNewName", //"机库申请确认函"
      "ConfirmationLetterAddress", //"机库申请确认函"
      "HGR_CODE" //机库类型
    ])
  },
  mounted() {  
    this.$store.dispatch("dataInit")  //注册号
    this.$store.dispatch("get_SYS_ARPT_CODE")  //机场
    this.$store.dispatch("get_FLGTTYPE_CODE")   //任务性质
    this.$store.dispatch("get_CITY_CODE")   //目的地
    this.$store.dispatch("get_HGR_CODE")   //机库类型    
    this.orderIsappliedHangar=this.orderIsappliedHangars
    this.judgeDisableds()
    this.initRWXZ()
  },
  methods: {
    ...mapMutations(["clickSeatQuery", "set_departure", "set_destination"]),
    additional(){    
      if(this.orderRegCode==''||this.orderRegCode==undefined){
        this.$message.error("请选择飞机注册号!");
        return
      }else if(this.ChooseOrder.orderAFlgtNo==''||this.ChooseOrder.orderAFlgtNo==undefined){
        this.$message.error("请输入航班号!");
        return
      }else{
          this.message.flgtFlightNo=this.ChooseOrder.orderAFlgtNo
          this.message.flgtDCityCode=this.orderRegCode
          this.ArderSelectionF=!this.ArderSelectionF   
          this.initRWXZ() 
      }        	
    },
    querySearch(queryString, cb) {
        let restaurants=[]
        restaurants = this.PlaceData
        let results =queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;
        // 调用 callback 返回建议列表的数据
        clearTimeout(this.timeout);
          this.timeout = setTimeout(() => {
            cb(results);
        }, 300 * Math.random());
    },
    createFilter(queryString) {
      return (restaurant) => {        
        return (restaurant.dicCh.toLowerCase().indexOf(queryString.toLowerCase()) === 0);
      };
    },
    judgeDisableds() {      
      if (this.orderIsappliedHangar == "2") {
        this.disableds = true;
        this.$store.commit("set_isApplyFor", false);
        this.$store.commit("set_orderHangar",'')
      } else {
        this.disableds = false;
        this.$store.commit("set_isApplyFor", true);
      }
    },
    changeArptTypeCode(val){//获取机型
      this.$store.commit("set_orderActypeCode",val)     
    },
    changeArptCode(val){//获取机场
      this.$store.commit("set_orderArptCode",val)   
    },
    changeorderHangar(val){//机库类型
      this.$store.commit("set_orderHangar",val)
    },
    changeAircraft(val) {
        this.$store.commit("set_orderRegCode",val)  
        this.$store.dispatch("get_Aircraft", val)    
        this.changeArptTypeCode(val)      
    },
    initRWXZ(){//初始化任务性质    
      let RWXZ=[]
      // console.log(this.ChooseOrder.orderFlgttypeCode)
      // console.log(this.ChooseOrder.orderSlvlCode)
      RWXZ.push(this.ChooseOrder.orderFlgttypeCode)
      if(this.ChooseOrder.orderSlvlCode!=''){
         RWXZ.push(this.ChooseOrder.orderSlvlCode)
      }
      this.FLGTTYPE_CODE_Change(RWXZ)
      this.VClear(500)
      
    },
    FLGTTYPE_CODE_Change(val) {//re任务性质
      this.orderFlgttypeCodes = val;
      if(this.orderFlgttypeCodes[0]!=undefined){
        this.orderFlgttypeCodes_s=false
      }
    },
    scrollToped(){//置顶
      setTimeout(()=>{
        document.body.scrollTop = 0
        document.documentElement.scrollTop = 0
      },100)
    },
    saveSubmit(index) {
      this.$validator.validateAll().then((result) => {
        if(result){
          if(this.orderIsappliedHangar=='2'){
             this.$store.commit("set_orderHangar",'')
            if(this.FlightPlanListName==''&&this.TimeReplyName==''){
              this.$message.error("请上传飞行计划清单及航班时刻批复!");
              this.files_s=true
              this.scrollToped()    
              return          
            }           
          }else{
            if(this.ConfirmationLetterName==''){
              this.$message.error("请上传机库申请确认函!");
              this.files_s=true
              this.scrollToped()
              return
            }
          }
          if(this.orderStay==0||this.orderStay=="0小时0分钟" ){
             this.$message.error("停场时间不可为0!");
             return
          }
          if(this.orderFlgttypeCodes[0]==undefined&&this.orderFlgttypeCodes[1]==undefined){
            this.orderFlgttypeCodes_s=true
            this.scrollToped()
              return
          }     
          // console.log('ok')        
          // return
          let param =qs.stringify({ //= new FormData();
              FlightPlanListName:this.FlightPlanListName,  //飞行计划清单
              FlightPlanListNewName:this.FlightPlanListNewName,  //飞行计划清单
              FlightPlanListAddress:this.FlightPlanListAddress,  //飞行计划清单
              TimeReplyName:this.TimeReplyName,  //"航班时刻批复"
              TimeReplyNewName:this.TimeReplyNewName,  //"航班时刻批复"
              TimeReplyAddress:this.TimeReplyAddress,  //"航班时刻批复"
              ConfirmationLetterName:this.ConfirmationLetterName,  //"机库申请确认函"
              ConfirmationLetterNewName:this.ConfirmationLetterNewName,  //"机库申请确认函"
              ConfirmationLetterAddress:this.ConfirmationLetterAddress ,  //"机库申请确认函"
              orderRegCode:this.orderRegCode,  //飞机注册号
              orderActypeCode:this.orderActypeCode,  //飞机型号
              orderAFlgtNo:this.ChooseOrder.orderAFlgtNo,  // 航班号(进港)
              orderDFlgtNo:this.ChooseOrder.orderDFlgtNo,  // 航班号(出港)
              orderDArptCode:this.ChooseOrder.orderDArptCode,  // 出发地
              orderAArptCode:this.ChooseOrder.orderAArptCode,  // 目的地
              orderSta:this.ChooseOrder.orderSta,  // 计划日期(进港)
              orderStd:this.ChooseOrder.orderStd,  // 计划日期(出港)
              orderADOrI:this.ChooseOrder.orderADOrI,  // 航线类型(进港)
              orderDDOrI:this.ChooseOrder.orderDDOrI,  // 航线类型(出港)
              orderStay:this.orderStay,  // 停场时间
              orderArptCode:this.orderArptCode,  // 机场
              orderFlgttypeCode:this.orderFlgttypeCodes[0]==undefined?this.orderFlgttypeCodes[1]:this.orderFlgttypeCodes[0],  // 任务性质
              orderSlvlCode:this.orderFlgttypeCodes[0]==undefined?'':this.orderFlgttypeCodes[1],  // 要客包机
              orderOerdertype:this.orderOerdertype,  // 预定类别
              orderIsappliedHangar:this.orderIsappliedHangar,  // 是否已申请机库
              orderHangar:this.orderHangar,  // 机库
              orderNo:this.ChooseOrder.orderNo,  // 机库
              orderRemark:this.ChooseOrder.orderRemark,  // 备注
              orderType: "1",  // 订单类型
              orderStatus: index  // 订单状态        
          })
          this.$http({
            url: "/bizOrder/addOrder",
            method: "post",
            data: param,
            headers: { Authorization: localStorage.getItem("token") }
          })
          .then(response => {
            if (response.data.status == 100) {
              this.$message({
                message: "添加成功!",
                type: "success"
              });
              setTimeout(() => {
                this.$router.push({ path: "/menu/reserve" });
              }, 1000);
                return
              }else if (response.data.status == 200) {
                  this.$message.error("用户未登录!");
              }else if (response.data.status == 201) {
                  this.$message.error("停场时间不符合规则!");
              }else if (response.data.status == 203) {
                this.$message.error("该机型无停场时限，请联系服务人员!");
              }else if (response.data.status == 401) {
                  this.$message.error("操作失败!");
              } else if(response.data.status == 500) {
                  this.$message.error("系统异常");
              }
            })
            .catch(error => {
              console.log(error);
            });
        
        }else{
          this.scrollToped()
          this.$notify.warning({
              title: '系统提示',
              message: "请完善提示信息！",
              offset: 100
          })
        }
      })
    },
    SeatQuery() {
      //余量查询
      if(this.orderActypeCode==''){
        this.$message.error("请选择飞机注册号");
        return
      }else{
        // this.allowance.startDate=this.ChooseOrder.orderSta; //this.orderSta,
        // this.allowance.endDate= this.ChooseOrder.orderStd; //this.orderStd,
        this.allowance.stndType=this.orderActypeCode
        this.clickSeatQuery();
      }      
    },
  }
};
</script>

<style scoped>
.FLGTTYPE{
  margin: 2px 0;
  height: 21px;
}
.el-cascader {
  display: block;
  line-height: 24px;
}
.el-radio-group {
  height: 20px;
}
.el-icon-circle-close {
  float: right;
}
.createOrderBox .info-box3 button {
  height: 51px;
}
.create {
  clear: both;
}

.el-select {
  width: 100%;
}
.el-message-box__message p {
  text-align: center;
}
.info-box1 .rbbq .cen input {
  width: 68%;
}
</style>